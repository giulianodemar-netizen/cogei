<?php

/**
 * Plugin Snippet WordPress - Sistema Gestione Fornitori
 * Versione base con logica stati corretta
 * 
 * REGOLE STATI:
 * - SOA NON è fondamentale per NESSUNO
 * - RCT-RCO NON serve per: FORNITURE, CONSULENZA, POLIZZE
 * - RCT-RCO serve per: LAVORO, SERVIZI, SUBAPPALTO, NOLI
 */

// Verifica che sia WordPress
if (!defined('ABSPATH')) {
    exit;
}

global $wpdb;
date_default_timezone_set('Europe/Rome');

// ================== CONFIGURAZIONE EMAIL ==================
$inviamail = false; // Cambia a true per attivare l'invio email, false per solo log

// ================== GESTIONE EXPORT CSV ==================

if (isset($_GET['csv_export']) && $_GET['csv_export'] === '1') {
    if (ob_get_contents()) ob_clean();
    
    header('Content-Type: application/csv');
    header('Content-Disposition: attachment; filename="fornitori_' . date('Y-m-d_H-i-s') . '.csv"');
    header('Pragma: no-cache');
    header('Expires: 0');
    
    echo "\xEF\xBB\xBF";
    echo "ID,Ragione Sociale,Email,P.IVA,Stato,Data Registrazione\n";
    
    $suppliers = get_users([
        'role' => 'subscriber',
        'orderby' => 'ID',
        'order' => 'DESC'
    ]);
    foreach ($suppliers as $user) {
        $user_id = $user->ID;
        $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true);
        $status = determineSupplierStatus($user_id);
        
        // Get WordPress registration date
        $registration_date = '';
        if (!empty($user->user_registered)) {
            $registration_date = date('d/m/Y H:i', strtotime($user->user_registered));
        }
        
        $row = [
            $user_id,
            '"' . str_replace('"', '""', $rag_soc ?: '') . '"',
            '"' . str_replace('"', '""', $user->user_email) . '"',
            '"' . str_replace('"', '""', $user->display_name) . '"',
            '"' . str_replace('"', '""', $status) . '"',
            '"' . str_replace('"', '""', $registration_date) . '"'
        ];
        
        echo implode(',', $row) . "\n";
    }
    
    exit;
}

// ================== FUNZIONI EMAIL ==================

function sendActivationEmail($user_id) {
    global $inviamail;
    
    $user = get_userdata($user_id);
    $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true);
    $email = $user->user_email;
    
    $log_file = ABSPATH . 'attiva_disattiva_utente_manuale.txt';
    $timestamp = date('d/m/Y H:i:s');
    
    if ($inviamail) {
        $to = $email;
        $subject = "Il tuo account su Cogei.net è stato attivato";
        $body = "<html>
<head>
<title>Account attivato</title>
</head>
<body>
<div style='background: #03679e; text-align: center; padding: 10px; margin-bottom: 30px;'><img style='max-width: 150px;' src='https://cogei.provasiti.it/cogei/wp-content/uploads/2023/02/logo_bianco-1.png' /></div>
Salve,".$rag_soc."<br>ti informaimo che la tua richiesta di qualifica è stata accettata. ti invitiamo a mantenere sempre aggiornata la documentazione della tua area privata.<br><br>
Cordiali Saluti,<br>
Cogei S.r.l.
<div class='footer' style='background: #03679e; padding: 10px; margin-top: 20px;'>
<div class='rigainfofo primariga'><a style='color: white; text-decoration: none;' href='#' target='_blank' rel='noopener'>Via Francesco Lomonaco, 3 - 80121 Napoli</a></div>
<div class='rigainfofo'><a style='color: white; text-decoration: none;' href='tel:+390812303782'>TEL: +39 081.230.37.82</a></div>
<div class='rigainfofo primariga'><a style='color: white; text-decoration: none;' href='mailto:cogei@pec.cogei.net'>PEC: cogei@pec.cogei.net</a></div>
<div style='margin-top: 40px; text-align: center; color: white; font-size: 12px !important;'>COGEI SRL - P.IVA: IT06569020636 - Copyright © 2023 Cogei. All Rights Reserved.</div>
</div>
</body>
</html>";
        $headers = "MIME-Version: 1.0" . "\r\n";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
        $headers .= 'From: <no-reply@cogei.net>' . "\r\n";
        $headers .= 'Cc:' . "\r\n";
        
        $email_sent = mail($to, $subject, $body, $headers);
        $log_entry = "[{$timestamp}] ATTIVAZIONE MANUALE - ID: {$user_id} | Email: {$email} | Ragione Sociale: {$rag_soc} | Email INVIATA: " . ($email_sent ? 'SI' : 'FALLITA') . "\n";
    } else {
        $log_entry = "[{$timestamp}] ATTIVAZIONE MANUALE - ID: {$user_id} | Email: {$email} | Ragione Sociale: {$rag_soc} | Email NON INVIATA (inviamail=false)\n";
    }
    
    if (!file_exists($log_file)) {
        $header = "LOG ATTIVAZIONI/DISATTIVAZIONI MANUALI - " . date('Y') . "\n";
        $header .= str_repeat("=", 80) . "\n\n";
        file_put_contents($log_file, $header, FILE_APPEND | LOCK_EX);
    }
    
    file_put_contents($log_file, $log_entry, FILE_APPEND | LOCK_EX);
}

function sendDeactivationEmail($user_id) {
    global $inviamail;
    
    $user = get_userdata($user_id);
    $user_rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true);
    $user_email = $user->user_email;
    
    $log_file = ABSPATH . 'attiva_disattiva_utente_manuale.txt';
    $timestamp = date('d/m/Y H:i:s');
    
    if ($inviamail) {
        $to = $user_email;
        $subject = "Il tuo account su Cogei.net è stato disattivato";
        $body = "<html>
<head>
<title>Account disattivato</title>
</head>
<body>
<div style='background: #03679e; text-align: center; padding: 10px; margin-bottom: 30px;'><img style='max-width: 150px;' src='https://cogei.provasiti.it/cogei/wp-content/uploads/2023/02/logo_bianco-1.png' /></div>
Gentile ".$user_rag_soc." la informiamo che la sua iscrizione è decaduta a causa del mancato aggiornamento della documentazione.<br><br>
Per maggiori informazioni contattare <a href='mailto:ufficio_qualita@cogei.net'>ufficio_qualita@cogei.net</a>
Cordiali Saluti,<br>
Cogei SRL.
<br><br>
<div class='footer' style='background: #03679e; padding: 10px; margin-top: 20px;'>
<div class='rigainfofo primariga'><a style='color: white; text-decoration: none;' href='#' target='_blank' rel='noopener'>Via Francesco Lomonaco, 3 - 80121 Napoli</a></div>
<div class='rigainfofo'><a style='color: white; text-decoration: none;' href='tel:+390812303782'>TEL: +39 081.230.37.82</a></div>
<div class='rigainfofo primariga'><a style='color: white; text-decoration: none;' href='mailto:cogei@pec.cogei.net'>PEC: cogei@pec.cogei.net</a></div>
<div style='margin-top: 40px; text-align: center; color: white; font-size: 12px !important;'>COGEI SRL - P.IVA: IT06569020636 - Copyright © 2023 Cogei. All Rights Reserved.</div>
</div>
</body>
</html>";
        $headers = "MIME-Version: 1.0" . "\r\n";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
        $headers .= 'From: <no-reply@cogei.net>' . "\r\n";
        $headers .= 'Cc:' . "\r\n";
        
        $email_sent = mail($to, $subject, $body, $headers);
        $log_entry = "[{$timestamp}] DISATTIVAZIONE MANUALE - ID: {$user_id} | Email: {$user_email} | Ragione Sociale: {$user_rag_soc} | Email INVIATA: " . ($email_sent ? 'SI' : 'FALLITA') . "\n";
    } else {
        $log_entry = "[{$timestamp}] DISATTIVAZIONE MANUALE - ID: {$user_id} | Email: {$user_email} | Ragione Sociale: {$user_rag_soc} | Email NON INVIATA (inviamail=false)\n";
    }
    
    if (!file_exists($log_file)) {
        $header = "LOG ATTIVAZIONI/DISATTIVAZIONI MANUALI - " . date('Y') . "\n";
        $header .= str_repeat("=", 80) . "\n\n";
        file_put_contents($log_file, $header, FILE_APPEND | LOCK_EX);
    }
    
    file_put_contents($log_file, $log_entry, FILE_APPEND | LOCK_EX);
}

// ================== FUNZIONI HELPER ==================

function createSuppliersCopyTable() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'suppliers_copy';
    $sql = "CREATE TABLE IF NOT EXISTS $table_name (
        id int(11) NOT NULL AUTO_INCREMENT,
        user_id int(11) NOT NULL,
        tipo varchar(100),
        ragione_sociale varchar(255),
        email varchar(255),
        piva varchar(50),
        rct_rco varchar(20),
        cciaa varchar(20),
        white_list varchar(20),
        soa varchar(20),
        durc varchar(20),
        altre_scadenze varchar(20),
        stato varchar(50),
        richiesta_documenti tinyint(1) DEFAULT 0,
        last_updated datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (id),
        UNIQUE KEY user_id (user_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;";
    $wpdb->query($sql);
    
    $wpdb->query("ALTER TABLE $table_name ADD COLUMN IF NOT EXISTS richiesta_documenti tinyint(1) DEFAULT 0");
}

function getSupplierCopyData($user_id) {
    global $wpdb;
    $result = $wpdb->get_row($wpdb->prepare(
        "SELECT * FROM {$wpdb->prefix}suppliers_copy WHERE user_id = %d",
        $user_id
    ), ARRAY_A);
    return $result;
}

function updateSupplierCopyData($user_id, $data) {
    global $wpdb;
    
    $table_name = $wpdb->prefix . 'suppliers_copy';
    
    $table_exists = $wpdb->get_var("SHOW TABLES LIKE '{$table_name}'");
    if (!$table_exists) {
        createSuppliersCopyTable();
    }
    
    $clean_data = $data;
    unset($clean_data['id']);
    unset($clean_data['last_updated']);
    
    if (!isset($clean_data['richiesta_documenti'])) {
        $clean_data['richiesta_documenti'] = 0;
    }
    
    $merge_data = array_merge(['user_id' => $user_id], $clean_data);
    
    $formats = ['%d'];
    foreach ($clean_data as $key => $value) {
        if ($key === 'richiesta_documenti') {
            $formats[] = '%d';
        } else {
            $formats[] = '%s';
        }
    }
    
    $result = $wpdb->replace(
        $table_name,
        $merge_data,
        $formats
    );
    
    return $result;
}

function hasDocuments($user_id) {
    $tipo = get_user_meta($user_id, 'user_registration_tip_ut_rad', true);
    
    $document_fields = [
        'user_registration_scad_CCIAA', 
        'user_registration_scad_wit', 
        'user_registration_scad_durc',
        'user_registration_scadenza_altre_scadenze'
    ];
    
    // NUOVA LOGICA: RCT-RCO serve solo per LAVORO, SERVIZI, SUBAPPALTO, NOLI
    // NON serve per: FORNITURE, CONSULENZA, POLIZZE
    if ($tipo === 'Lavoro' || $tipo === 'Servizi' || $tipo === 'Subappalto' || $tipo === 'Noli') {
        if ($tipo === 'Forniture') {
            $document_fields[] = 'user_registration_scad_rct_rco_forni';
        } else {
            $document_fields[] = 'user_registration_scad_rct_rco';
        }
    }
    
    // SOA NON è mai fondamentale (rimosso completamente)
    
    foreach ($document_fields as $field) {
        if (!empty(get_user_meta($user_id, $field, true))) {
            return true;
        }
    }
    return false;
}

function determineSupplierStatus($user_id) {
    // Controlla se c'è uno stato forzato manualmente
    $forced_status = get_user_meta($user_id, 'forced_supplier_status', true);
    if (!empty($forced_status)) {
        return $forced_status;
    }
    
    // Calcola stato dinamico con NUOVA LOGICA
    $tipo = get_user_meta($user_id, 'user_registration_tip_ut_rad', true);
    
    // DOCUMENTI SEMPRE FONDAMENTALI
    $documenti_fondamentali = [
        'user_registration_scad_CCIAA', 
        'user_registration_scad_wit',
        'user_registration_scad_durc',
        'user_registration_scadenza_altre_scadenze'
    ];
    
    // NUOVA LOGICA RCT-RCO: serve solo per LAVORO, SERVIZI, SUBAPPALTO, NOLI
    // NON serve per: FORNITURE, CONSULENZA, POLIZZE
    if ($tipo === 'Lavoro' || $tipo === 'Servizi' || $tipo === 'Subappalto' || $tipo === 'Noli') {
        if ($tipo === 'Forniture') {
            $documenti_fondamentali[] = 'user_registration_scad_rct_rco_forni';
        } else {
            $documenti_fondamentali[] = 'user_registration_scad_rct_rco';
        }
    }
    
    // SOA NON è mai fondamentale (completamente rimosso)
    
    $documenti_caricati = 0;
    $documenti_totali = count($documenti_fondamentali);
    $has_expired = false;
    $expired_docs = [];
    $has_any_document = false;
    
    foreach ($documenti_fondamentali as $field) {
        $date = get_user_meta($user_id, $field, true);
        if (!empty($date)) {
            $documenti_caricati++;
            $has_any_document = true;
            
            $converted_date = str_replace("/", "-", $date);
            try {
                $now = new DateTime("now");
                $expiry_date = new DateTime($converted_date . ' 23:59:59');
                $interval = $now->diff($expiry_date);
                $days = (int)$interval->format('%r%a');
                
                if ($days < 0) {
                    $has_expired = true;
                }
                
                if ($days <= -15) {
                    $expired_docs[] = [
                        'field' => $field,
                        'days' => abs($days),
                        'date' => $date
                    ];
                }
            } catch (Exception $e) {
                // Ignora errori di data
            }
        }
    }
    
    if (!empty($expired_docs)) {
        global $disattivazione_info;
        $disattivazione_info = $expired_docs;
        $stato_base = 'Disattivo';
    } elseif ($documenti_caricati === $documenti_totali && !$has_expired) {
        $stato_base = 'Attivo';
    } elseif ($has_expired) {
        $stato_base = 'Scaduto';
    } elseif (!$has_any_document) {
        $stato_base = 'Solo_Registrato';
    } else {
        $stato_base = 'Solo_Registrato';
    }
    
    $is_waiting_integration = ($documenti_caricati > 0 && $documenti_caricati < $documenti_totali);
    
    if ($stato_base === 'Disattivo' && $is_waiting_integration) {
        return 'Disattivo_In_Attesa';
    } elseif ($stato_base === 'Solo_Registrato' && $is_waiting_integration) {
        return 'Solo_Registrato_In_Attesa';
    } else {
        return $stato_base;
    }
}

function renderExpiryCell($date) {
    if (empty($date)) {
        return "<span style='color:gray; font-style:italic;'>Non caricato</span>";
    }
    
    $converted_date = str_replace("/", "-", $date);
    try {
        $now = new DateTime("now");
        $expiry_date = new DateTime($converted_date . ' 23:59:59');
        $interval = $now->diff($expiry_date);
        
        $days = (int)$interval->format('%r%a');
        $hours = (int)$interval->format('%r%h');
        $minutes = (int)$interval->format('%r%i');
        
        $output = $date;
        
        if ($days < 0) {
            $abs_days = abs($days);
            $abs_hours = abs($hours);
            
            if ($abs_days > 0) {
                $time_text = $abs_days . " giorni";
                if ($abs_hours > 0) {
                    $time_text .= " e " . $abs_hours . " ore";
                }
            } else {
                $time_text = $abs_hours . " ore";
            }
            
            $output .= "<br><span style='color:red; font-weight:bold;'>Scaduto da: {$time_text}</span>";
            
        } elseif ($days === 0) {
            if ($hours <= 0) {
                $output .= "<br><span style='color:red; font-weight:bold;'>Scade oggi</span>";
            } else {
                $time_text = $hours . " ore";
                if ($minutes > 0) {
                    $time_text .= " e " . $minutes . " minuti";
                }
                $output .= "<br><span style='color:orange; font-weight:bold;'>Scade oggi tra: {$time_text}</span>";
            }
            
        } else {
            if ($days === 1) {
                $time_text = "1 giorno";
                if ($hours > 0 && $days <= 15) {
                    $time_text .= " e " . $hours . " ore";
                }
            } else {
                $time_text = $days . " giorni";
                if ($hours > 0 && $days <= 15) {
                    $time_text .= " e " . $hours . " ore";
                }
            }
            
            if ($days <= 15) {
                $output .= "<br><span style='color:orange; font-weight:bold;'>Scade tra: {$time_text}</span>";
            } else {
                $output .= "<br><span style='color:green;'>Scade tra: {$days} giorni</span>";
            }
        }
        
        return $output;
        
    } catch (Exception $e) {
        return $date;
    }
}

// Function to get document request for user
function getDocumentRequest($user_id) {
    global $wpdb;
    return $wpdb->get_row($wpdb->prepare(
        "SELECT * FROM {$wpdb->prefix}document_requests WHERE user_id = %d",
        $user_id
    ), ARRAY_A);
}

// Function to check for document changes and auto-disable users
function checkDocumentChangesAndDisableUser($user_id) {
    global $wpdb, $inviamail;
    
    // Get current live data from user_meta
    $user = get_userdata($user_id);
    if (!$user) return false;
    
    $tipo = get_user_meta($user_id, 'user_registration_tip_ut_rad', true);
    $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true);
    
    // Document fields to monitor
    $document_fields = [
        'user_registration_scad_CCIAA' => 'CCIAA',
        'user_registration_scad_wit' => 'White List', 
        'user_registration_scad_durc' => 'DURC',
        'user_registration_scadenza_altre_scadenze' => 'Altre Scadenze'
    ];
    
    // Add RCT-RCO field based on type
    if ($tipo === 'Lavoro' || $tipo === 'Servizi' || $tipo === 'Subappalto' || $tipo === 'Noli') {
        if ($tipo === 'Forniture') {
            $document_fields['user_registration_scad_rct_rco_forni'] = 'RCT-RCO (Forniture)';
        } else {
            $document_fields['user_registration_scad_rct_rco'] = 'RCT-RCO';
        }
    }
    
    // Get current live data
    $live_data = [];
    foreach ($document_fields as $field => $label) {
        $live_data[$field] = get_user_meta($user_id, $field, true);
    }
    
    // Get copy table data
    $copy_data = getSupplierCopyData($user_id);
    if (!$copy_data) {
        // No copy data exists yet, create it
        updateSupplierCopyData($user_id, [
            'tipo' => $tipo,
            'ragione_sociale' => $rag_soc,
            'email' => $user->user_email,
            'piva' => $user->display_name,
            'rct_rco' => $live_data['user_registration_scad_rct_rco'] ?? $live_data['user_registration_scad_rct_rco_forni'] ?? '',
            'cciaa' => $live_data['user_registration_scad_CCIAA'] ?? '',
            'white_list' => $live_data['user_registration_scad_wit'] ?? '',
            'soa' => get_user_meta($user_id, 'user_registration_scad_soa', true) ?: '',
            'durc' => $live_data['user_registration_scad_durc'] ?? '',
            'altre_scadenze' => $live_data['user_registration_scadenza_altre_scadenze'] ?? '',
            'stato' => determineSupplierStatus($user_id)
        ]);
        return false; // No comparison possible on first run
    }
    
    // Compare document dates
    $changed_documents = [];
    
    // Map copy table fields to live fields
    $field_mapping = [
        'cciaa' => 'user_registration_scad_CCIAA',
        'white_list' => 'user_registration_scad_wit',
        'durc' => 'user_registration_scad_durc',
        'altre_scadenze' => 'user_registration_scadenza_altre_scadenze',
        'rct_rco' => ($tipo === 'Forniture') ? 'user_registration_scad_rct_rco_forni' : 'user_registration_scad_rct_rco'
    ];
    
    foreach ($field_mapping as $copy_field => $live_field) {
        $copy_value = $copy_data[$copy_field] ?? '';
        $live_value = $live_data[$live_field] ?? '';
        
        if ($copy_value !== $live_value && !empty($live_value)) {
            $label = $document_fields[$live_field] ?? $copy_field;
            $changed_documents[] = [
                'document' => $label,
                'old_date' => $copy_value,
                'new_date' => $live_value
            ];
        }
    }
    
    // If changes detected, disable user and send notification
    if (!empty($changed_documents)) {
        // Force disable user status
        update_user_meta($user_id, 'forced_supplier_status', 'Disattivo');
        
        // Log the automatic disabling
        $log_file = ABSPATH . 'auto_disattivazione_documenti.txt';
        $timestamp = date('d/m/Y H:i:s');
        $log_entry = "[{$timestamp}] AUTO-DISATTIVAZIONE - ID: {$user_id} | Ragione Sociale: {$rag_soc} | Documenti modificati: " . count($changed_documents) . "\n";
        
        if (!file_exists($log_file)) {
            $header = "LOG AUTO-DISATTIVAZIONI PER MODIFICHE DOCUMENTI - " . date('Y') . "\n";
            $header .= str_repeat("=", 80) . "\n\n";
            file_put_contents($log_file, $header, FILE_APPEND | LOCK_EX);
        }
        file_put_contents($log_file, $log_entry, FILE_APPEND | LOCK_EX);
        
        // Send notification email to admin
        sendAdminDocumentChangeNotification($user_id, $changed_documents, $rag_soc);
        
        return $changed_documents; // Return array of changed documents
    }
    
    return false; // No changes detected
}

// Function to send admin notification about document changes
function sendAdminDocumentChangeNotification($user_id, $changed_documents, $rag_soc) {
    global $inviamail;
    
    $admin_email = 'ufficio_qualita@cogei.net';
    
    if ($inviamail) {
        $subject = "ALERT: Disattivazione automatica fornitore per modifica documenti";
        
        $documents_list = '';
        foreach ($changed_documents as $change) {
            $documents_list .= "- {$change['document']}: da '{$change['old_date']}' a '{$change['new_date']}'<br>";
        }
        
        $body = "<html>
<head>
<title>Disattivazione Automatica Fornitore</title>
</head>
<body>
<div style='background: #dc3545; color: white; padding: 20px; text-align: center; margin-bottom: 20px; border-radius: 8px;'>
<h2 style='margin: 0; color: white;'>🚨 ALERT - Disattivazione Automatica</h2>
</div>

<p>Ciao Admin,</p>

<p>Il fornitore <strong>{$rag_soc}</strong> (ID: {$user_id}) è stato <strong>automaticamente disattivato</strong> 
a causa della modifica della documentazione nel database.</p>

<div style='background: #f8d7da; padding: 15px; border-left: 4px solid #dc3545; margin: 20px 0; border-radius: 4px;'>
<h3 style='margin: 0 0 10px 0; color: #721c24;'>📄 Documenti modificati:</h3>
{$documents_list}
</div>

<div style='background: #fff3cd; padding: 15px; border-left: 4px solid #ffc107; margin: 20px 0; border-radius: 4px;'>
<h3 style='margin: 0 0 10px 0; color: #856404;'>⚡ Azioni automatiche eseguite:</h3>
• Fornitore disattivato automaticamente<br>
• Stato forzato a 'Disattivo' nel sistema<br>
• Log creato in auto_disattivazione_documenti.txt<br>
</div>

<p><strong>Data rilevamento:</strong> " . date('d/m/Y H:i:s') . "</p>
<p><strong>Sistema:</strong> Controllo automatico modifiche documenti</p>

<p>È necessario verificare manualmente le modifiche e decidere se riattivare il fornitore.</p>

<div class='footer' style='background: #03679e; padding: 10px; margin-top: 30px; border-radius: 4px;'>
<div style='text-align: center; color: white; font-size: 12px;'>
COGEI SRL - Sistema di Controllo Automatico Documenti<br>
Copyright © 2023 Cogei. All Rights Reserved.
</div>
</div>
</body>
</html>";
        
        $headers = "MIME-Version: 1.0" . "\r\n";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
        $headers .= 'From: <sistema-automatico@cogei.net>' . "\r\n";
        $headers .= 'Reply-To: <no-reply@cogei.net>' . "\r\n";
        
        $email_sent = mail($admin_email, $subject, $body, $headers);
        
        // Log email result
        $log_entry = "[" . date('d/m/Y H:i:s') . "] ADMIN NOTIFICATION - ID: {$user_id} | Admin Email: {$admin_email} | Email INVIATA: " . ($email_sent ? 'SI' : 'FALLITA') . "\n";
        file_put_contents(ABSPATH . 'auto_disattivazione_documenti.txt', $log_entry, FILE_APPEND | LOCK_EX);
    }
}

// Function to collect all users with document changes for summary display
function getAllUsersWithDocumentChanges() {
    global $wpdb;
    
    $suppliers = get_users([
        'role' => 'subscriber',
        'orderby' => 'ID',
        'order' => 'DESC'
    ]);
    
    $users_with_changes = [];
    
    foreach ($suppliers as $user) {
        $user_id = $user->ID;
        $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true);
        
        // Check for document changes without triggering disabling action
        createSuppliersCopyTable();
        $changed_documents = checkDocumentChangesWithoutAction($user_id);
        
        if (is_array($changed_documents) && !empty($changed_documents)) {
            $users_with_changes[] = [
                'user_id' => $user_id,
                'rag_soc' => $rag_soc ?: 'N/A',
                'email' => $user->user_email,
                'changed_documents' => $changed_documents
            ];
        }
    }
    
    return $users_with_changes;
}

// Function to check document changes without triggering disable action (for summary display)
function checkDocumentChangesWithoutAction($user_id) {
    global $wpdb;
    
    $user = get_userdata($user_id);
    if (!$user) return false;
    
    $tipo = get_user_meta($user_id, 'user_registration_tip_ut_rad', true);
    
    // Document fields to monitor
    $document_fields = [
        'user_registration_scad_CCIAA' => 'CCIAA',
        'user_registration_scad_wit' => 'White List', 
        'user_registration_scad_durc' => 'DURC',
        'user_registration_scadenza_altre_scadenze' => 'Altre Scadenze'
    ];
    
    // Add RCT-RCO field based on type
    if ($tipo === 'Lavoro' || $tipo === 'Servizi' || $tipo === 'Subappalto' || $tipo === 'Noli') {
        if ($tipo === 'Forniture') {
            $document_fields['user_registration_scad_rct_rco_forni'] = 'RCT-RCO (Forniture)';
        } else {
            $document_fields['user_registration_scad_rct_rco'] = 'RCT-RCO';
        }
    }
    
    // Get current live data
    $live_data = [];
    foreach ($document_fields as $field => $label) {
        $live_data[$field] = get_user_meta($user_id, $field, true);
    }
    
    // Get copy table data
    $copy_data = getSupplierCopyData($user_id);
    if (!$copy_data) {
        return false; // No comparison possible without copy data
    }
    
    // Compare document dates
    $changed_documents = [];
    
    // Map copy table fields to live fields
    $field_mapping = [
        'cciaa' => 'user_registration_scad_CCIAA',
        'white_list' => 'user_registration_scad_wit',
        'durc' => 'user_registration_scad_durc',
        'altre_scadenze' => 'user_registration_scadenza_altre_scadenze',
        'rct_rco' => ($tipo === 'Forniture') ? 'user_registration_scad_rct_rco_forni' : 'user_registration_scad_rct_rco'
    ];
    
    foreach ($field_mapping as $copy_field => $live_field) {
        $copy_value = $copy_data[$copy_field] ?? '';
        $live_value = $live_data[$live_field] ?? '';
        
        if ($copy_value !== $live_value && !empty($live_value)) {
            $label = $document_fields[$live_field] ?? $copy_field;
            $changed_documents[] = [
                'document' => $label,
                'old_date' => $copy_value,
                'new_date' => $live_value
            ];
        }
    }
    
    return empty($changed_documents) ? false : $changed_documents;
}

// ================== GESTIONE RICHIESTE DOCUMENTI ==================

// Create document_requests table if not exists
function createDocumentRequestsTable() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'document_requests';
    $sql = "CREATE TABLE IF NOT EXISTS $table_name (
        id int(11) NOT NULL AUTO_INCREMENT,
        user_id int(11) NOT NULL,
        richiesta_note text NOT NULL,
        data_richiesta datetime DEFAULT CURRENT_TIMESTAMP,
        richiesto_da int(11) NOT NULL,
        PRIMARY KEY (id),
        UNIQUE KEY unique_user_id (user_id),
        KEY richiesto_da (richiesto_da)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;";
    $wpdb->query($sql);
}

// Handle document request actions
if (isset($_POST['document_action'])) {
    $action = sanitize_text_field($_POST['document_action']);
    $user_id = intval($_POST['user_id']);
    $current_user_id = get_current_user_id();
    
    createDocumentRequestsTable();
    
    switch ($action) {
        case 'request_documents':
            $richiesta_note = sanitize_textarea_field($_POST['richiesta_note']);
            
            if (!empty($richiesta_note) && !empty($user_id)) {
                global $wpdb;
                
                // Insert or update document request
                $result = $wpdb->replace(
                    $wpdb->prefix . 'document_requests',
                    array(
                        'user_id' => $user_id,
                        'richiesta_note' => $richiesta_note,
                        'richiesto_da' => $current_user_id
                    ),
                    array('%d', '%s', '%d')
                );
                
                if ($result) {
                    // Send email to company
                    $user = get_userdata($user_id);
                    $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true) ?: $user->display_name;
                    $admin_user = get_userdata($current_user_id);
                    
                    if ($inviamail) {
                        $subject = "Richiesta Documenti - Cogei.net";
                        $body = "<html>
<head>
<title>Richiesta Documenti</title>
</head>
<body>
<div style='background: #0066a2; padding: 20px; text-align: center; margin-bottom: 20px; border-radius: 8px;'>
<h2 style='margin: 0; color: white;'>Richiesta Documenti</h2>
</div>
Gentile {$rag_soc},<br><br>
hai ricevuto una richiesta di documenti dal pannello di amministrazione:<br><br>
<div style='background: #f8f9fa; padding: 15px; border-left: 4px solid #0066a2; margin: 20px 0;'>
<strong>Richiesta:</strong><br>
{$richiesta_note}
</div>
<strong>Richiesto da:</strong> {$admin_user->display_name}<br>
<strong>Data richiesta:</strong> " . date('d/m/Y H:i') . "<br><br>
Ti preghiamo di aggiornare i documenti richiesti nel tuo profilo fornitore.<br><br>
<div class='footer' style='background: #03679e; padding: 10px; margin-top: 20px;'>
<div style='margin-top: 40px; text-align: center; color: white; font-size: 12px !important;'>COGEI SRL - P.IVA: IT06569020636 - Copyright © 2023 Cogei. All Rights Reserved.</div>
</div>
</body>
</html>";
                        
                        $headers = "MIME-Version: 1.0" . "\r\n";
                        $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
                        $headers .= 'From: <no-reply@cogei.net>' . "\r\n";
                        
                        mail($user->user_email, $subject, $body, $headers);
                    }
                    
                    $success = true;
                    $success_info = [
                        'action_type' => 'document_request',
                        'user_name' => $rag_soc,
                        'message' => 'Richiesta documenti inviata'
                    ];
                }
            }
            break;
            
        case 'cancel_request':
            global $wpdb;
            
            $result = $wpdb->delete(
                $wpdb->prefix . 'document_requests',
                array('user_id' => $user_id),
                array('%d')
            );
            
            if ($result !== false) {
                $user = get_userdata($user_id);
                $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true) ?: $user->display_name;
                
                $success = true;
                $success_info = [
                    'action_type' => 'document_request_cancelled',
                    'user_name' => $rag_soc,
                    'message' => 'Richiesta documenti rimossa'
                ];
            }
            break;
    }
    
    // Redirect after action
    $current_url = $_SERVER['REQUEST_URI'];
    $redirect_url = remove_query_arg(['msg', 'action_type', 'user_name', 'message'], $current_url);
    
    if ($success && !empty($success_info)) {
        $redirect_params = array_merge(['msg' => 'success'], $success_info);
        $redirect_url = add_query_arg($redirect_params, $redirect_url);
    } elseif ($success) {
        $redirect_url = add_query_arg('msg', 'success', $redirect_url);
    } else {
        $redirect_url = add_query_arg('msg', 'error', $redirect_url);
    }
    
    $redirect_url = html_entity_decode($redirect_url, ENT_QUOTES, 'UTF-8');
    
    if (!headers_sent()) {
        header("Location: " . $redirect_url);
        exit;
    } else {
        echo '<script>window.location.href = "' . addslashes($redirect_url) . '";</script>';
        exit;
    }
}

// ================== GESTIONE AZIONI ==================

if (isset($_GET['action']) && isset($_GET['user_id'])) {
    $user_id = intval($_GET['user_id']);
    $action = sanitize_text_field($_GET['action']);
    $success = false;
    $success_info = array();
    
    createSuppliersCopyTable();
    
    switch ($action) {
        case 'toggle_user_status':
            if (isset($_GET['new_status'])) {
                $new_status = sanitize_text_field($_GET['new_status']);
                $old_status = determineSupplierStatus($user_id);
                
                // Forza stato nel user_meta
                update_user_meta($user_id, 'forced_supplier_status', $new_status);
                
                // Sincronizza tabella copia
                $user = get_userdata($user_id);
                $tipo = get_user_meta($user_id, 'user_registration_tip_ut_rad', true);
                $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true);
                $rct_rco_field = ($tipo === 'Forniture') ? 'user_registration_scad_rct_rco_forni' : 'user_registration_scad_rct_rco';
                $rct_rco = get_user_meta($user_id, $rct_rco_field, true);
                $ccia = get_user_meta($user_id, 'user_registration_scad_CCIAA', true);
                $white_list = get_user_meta($user_id, 'user_registration_scad_wit', true);
                $soa = get_user_meta($user_id, 'user_registration_scad_soa', true);
                $durc = get_user_meta($user_id, 'user_registration_scad_durc', true);
                $altre = get_user_meta($user_id, 'user_registration_scadenza_altre_scadenze', true);
                
                $copy_data = getSupplierCopyData($user_id);
                $richiesta_documenti = ($copy_data && isset($copy_data['richiesta_documenti'])) ? $copy_data['richiesta_documenti'] : 0;
                
                $sync_data = [
                    'tipo' => $tipo ?: '',
                    'ragione_sociale' => $rag_soc ?: '',
                    'email' => $user->user_email,
                    'piva' => $user->display_name,
                    'rct_rco' => $rct_rco ?: '',
                    'cciaa' => $ccia ?: '',
                    'white_list' => $white_list ?: '',
                    'soa' => $soa ?: '',
                    'durc' => $durc ?: '',
                    'altre_scadenze' => $altre ?: '',
                    'stato' => $new_status,
                    'richiesta_documenti' => $richiesta_documenti
                ];
                
                updateSupplierCopyData($user_id, $sync_data);
                
                // Invia email
                if ($new_status === 'Attivo' && $old_status !== 'Attivo') {
                    sendActivationEmail($user_id);
                } elseif ($new_status === 'Disattivo' && $old_status !== 'Disattivo') {
                    sendDeactivationEmail($user_id);
                }
                
                $success = true;
                $success_info = array(
                    'action_type' => 'status_change',
                    'new_status' => $new_status,
                    'user_email' => $user->user_email,
                    'user_name' => $rag_soc ?: $user->display_name
                );
            }
            break;
    }
    
    // Redirect
    $current_url = $_SERVER['REQUEST_URI'];
    $redirect_url = remove_query_arg(['action', 'user_id', 'new_status', 'msg', 'action_type', 'target_user_id', 'user_email', 'user_name'], $current_url);
    
    if ($success && !empty($success_info)) {
        $redirect_params = array(
            'msg' => 'success',
            'action_type' => $success_info['action_type'],
            'target_user_id' => $user_id,
            'user_email' => rawurlencode($success_info['user_email']),
            'user_name' => rawurlencode($success_info['user_name'])
        );
        
        if (isset($success_info['new_status'])) {
            $redirect_params['new_status'] = $success_info['new_status'];
        }
        
        $redirect_url = add_query_arg($redirect_params, $redirect_url);
    } elseif ($success) {
        $redirect_url = add_query_arg('msg', 'success', $redirect_url);
    } else {
        $redirect_url = add_query_arg('msg', 'error', $redirect_url);
    }
    
    // Decodifica entità HTML per evitare problemi con &#038;
    $redirect_url = html_entity_decode($redirect_url, ENT_QUOTES, 'UTF-8');
    
    if (!headers_sent()) {
        header("Location: " . $redirect_url);
        exit;
    } else {
        echo '<script>window.location.href = "' . addslashes($redirect_url) . '";</script>';
        exit;
    }
}

// ================== CONFIGURAZIONE ==================

$supplier_statuses = [
    'Attivo' => [
        'color' => '#28a745', 
        'label' => 'Attivo',
        'tooltip' => 'Tutti i documenti richiesti sono caricati e validi. Il fornitore può partecipare a gare e commesse.'
    ],
    'Disattivo' => [
        'color' => '#dc3545', 
        'label' => 'Disattivo',
        'tooltip' => 'Ha documenti scaduti da più di 15 giorni. Il fornitore non può partecipare a gare fino all\'aggiornamento dei documenti.'
    ],
    'Solo_Registrato' => [
        'color' => '#ffc107', 
        'label' => 'Solo Registrato',
        'tooltip' => 'Non ha caricato tutti i documenti richiesti. Deve completare la documentazione per diventare attivo.'
    ],
    'Scaduto' => [
        'color' => '#fd7e14', 
        'label' => 'Documenti Scaduti',
        'tooltip' => 'Ha documenti scaduti ma non ancora da 15 giorni. Deve rinnovare i documenti al più presto.'
    ],
    'Disattivo_In_Attesa' => [
        'color' => '#6f42c1', 
        'label' => 'Disattivo + In Attesa Documenti',
        'tooltip' => 'È disattivato per documenti scaduti da più di 15 giorni, ma ha caricato alcuni documenti (documentazione incompleta).'
    ],
    'Solo_Registrato_In_Attesa' => [
        'color' => '#20c997', 
        'label' => 'Registrato + In Attesa Documenti',
        'tooltip' => 'Ha caricato alcuni documenti ma non tutti quelli richiesti. Deve completare la documentazione.'
    ],
    'Richiesti_nuovi_documenti' => [
        'color' => '#e83e8c', 
        'label' => 'Richiesti Documenti',
        'tooltip' => 'È stato richiesto al fornitore di caricare nuovi documenti. In attesa di risposta.'
    ],
    'Richiesti_Documenti' => [
        'color' => '#e83e8c', 
        'label' => 'Richiesti Documenti',
        'tooltip' => 'È stato richiesto al fornitore di caricare nuovi documenti. In attesa di risposta.'
    ]
];

createSuppliersCopyTable();

// ================== OUTPUT HTML ==================

echo '<div style="margin: 20px; font-family: Arial, sans-serif;">';
echo '<h2>Gestione Fornitori</h2>';

// STATO EMAIL
global $inviamail;
echo '<div style="margin-bottom: 15px; padding: 10px; background: ' . ($inviamail ? '#d4edda' : '#fff3cd') . '; border-radius: 5px; border-left: 4px solid ' . ($inviamail ? '#28a745' : '#ffc107') . ';">';
echo '<strong>Stato Email:</strong> ' . ($inviamail ? '<span style="color: #28a745;">ATTIVE - Le email vengono inviate</span>' : '<span style="color: #856404;">DISATTIVATE - Solo log (cambia $inviamail = true per attivare)</span>');
echo '</div>';

// CONTROLLI
echo '<div style="margin-bottom: 15px;">';
echo '<button onclick="exportTableToCSV()" style="background: #28a745; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; font-weight: bold;">Esporta CSV</button>';
echo '<span style="margin-left: 10px; font-size: 12px; color: #666;">Esporta la tabella come visualizzata (con filtri applicati)</span>';
echo '</div>';

// CAMPO DI RICERCA
echo '<div style="margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px;">';
echo '<strong>Cerca in tutti i campi:</strong><br>';
echo '<input type="text" id="searchInput" placeholder="Scrivi per cercare..." style="width: 100%; max-width: 400px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; margin-top: 5px;" onkeyup="performSearch()">';
echo '<small style="display: block; margin-top: 5px; color: #666;">Cerca per ID, tipo, ragione sociale, email, P.IVA, stato o qualsiasi altro campo</small>';
echo '</div>';

// FILTRI STATI
echo '<div style="margin-bottom: 15px; padding: 10px; background: #f0f0f0; border-radius: 5px;">';
echo '<strong>Filtra per Stati (seleziona multipli):</strong><br>';
echo '<button onclick="clearAllFilters()" style="background: #6c757d; color: white; padding: 4px 8px; border: none; border-radius: 8px; font-size: 11px; margin: 2px; cursor: pointer;">Pulisci Tutti</button><br><br>';

foreach ($supplier_statuses as $key => $config) {
    if ($key === 'Richiesti_Documenti' || $key === 'Richiesti_nuovi_documenti') continue;
    
    echo '<label style="display: inline-block; margin: 2px; cursor: pointer;">';
    echo '<input type="checkbox" id="status_' . $key . '" onchange="updateFilters()" style="margin-right: 5px;">';
    echo '<span style="background: ' . $config['color'] . '; color: white; padding: 4px 8px; border-radius: 8px; font-size: 11px;" title="' . htmlspecialchars($config['tooltip']) . '">' . $config['label'] . '</span>';
    echo '</label> ';
}

echo '<label style="display: inline-block; margin: 2px; cursor: pointer;">';
echo '<input type="checkbox" id="filter_richiesti_documenti" onchange="updateFilters()" style="margin-right: 5px;">';
echo '<span style="background: #e83e8c; color: white; padding: 4px 8px; border-radius: 8px; font-size: 11px;" title="È stato richiesto al fornitore di caricare nuovi documenti. In attesa di risposta.">Richiesti Documenti</span>';
echo '</label> ';

echo '<label style="display: inline-block; margin: 2px; cursor: pointer;">';
echo '<input type="checkbox" id="filter_auto_disattivato" onchange="updateFilters()" style="margin-right: 5px;">';
echo '<span style="background: #dc3545; color: white; padding: 4px 8px; border-radius: 8px; font-size: 11px;" title="Utenti disattivati automaticamente per modifiche documenti">🚨 Auto-Disattivato</span>';
echo '</label> ';

echo '</div>';

// FILTRI TIPOLOGIE
echo '<div style="margin-bottom: 15px; padding: 10px; background: #e3f2fd; border-radius: 5px;">';
echo '<strong>Filtra per Tipologie (seleziona multipli):</strong><br>';
$user_types = ['Lavoro', 'Servizi', 'Forniture', 'Subappalto', 'Noli', 'Consulenze', 'Polizze'];
echo '<button onclick="clearAllFilters()" style="background: #6c757d; color: white; padding: 4px 8px; border: none; border-radius: 8px; font-size: 11px; margin: 2px; cursor: pointer;">Pulisci Tutti</button><br><br>';

foreach ($user_types as $type) {
    echo '<label style="display: inline-block; margin: 2px; cursor: pointer;">';
    echo '<input type="checkbox" id="type_' . $type . '" onchange="updateFilters()" style="margin-right: 5px;">';
    echo '<span style="background: #2196f3; color: white; padding: 4px 8px; border-radius: 8px; font-size: 11px;">' . $type . '</span>';
    echo '</label> ';
}
echo '</div>';

// FILTRI ATTIVI
echo '<div id="active-filters" style="margin-bottom: 15px; padding: 10px; background: #fff3cd; border-radius: 5px; border-left: 4px solid #ffc107; display: none;">';
echo '<strong>Filtri Attivi:</strong> <span id="filter-list"></span>';
echo '<button onclick="clearAllFilters()" style="background: #dc3545; color: white; border: none; padding: 2px 6px; border-radius: 3px; font-size: 10px; margin-left: 10px; cursor: pointer;">Rimuovi Tutti</button>';
echo '</div>';

// MESSAGGI DI FEEDBACK
if (isset($_GET['msg'])) {
    $msg_type = $_GET['msg'] === 'success' ? 'success' : 'error';
    $msg_color = $msg_type === 'success' ? '#d4edda' : '#f8d7da';
    $msg_text_color = $msg_type === 'success' ? '#155724' : '#721c24';
    $msg_icon = $msg_type === 'success' ? '✅' : '❌';
    
    $msg_text = $msg_icon . ' Operazione completata con successo!';
    
    if ($msg_type === 'success' && isset($_GET['action_type'])) {
        $action_type = sanitize_text_field($_GET['action_type']);
        $target_user_id = isset($_GET['target_user_id']) ? intval($_GET['target_user_id']) : 0;
        $user_email = isset($_GET['user_email']) ? rawurldecode(sanitize_email($_GET['user_email'])) : '';
        $user_name = isset($_GET['user_name']) ? rawurldecode(sanitize_text_field($_GET['user_name'])) : '';
        $new_status = isset($_GET['new_status']) ? sanitize_text_field($_GET['new_status']) : '';
        
        switch ($action_type) {
            case 'status_change':
                if ($new_status === 'Attivo') {
                    $msg_text = "🟢 <strong>FORNITORE ATTIVATO</strong><br>";
                    $msg_text .= "• <strong>ID:</strong> {$target_user_id}<br>";
                    $msg_text .= "• <strong>Nome:</strong> {$user_name}<br>";
                    $msg_text .= "• <strong>Email:</strong> {$user_email}<br>";
                    $msg_text .= "• <strong>Nuovo Stato:</strong> ATTIVO";
                } elseif ($new_status === 'Disattivo') {
                    $msg_text = "🔴 <strong>FORNITORE DISATTIVATO</strong><br>";
                    $msg_text .= "• <strong>ID:</strong> {$target_user_id}<br>";
                    $msg_text .= "• <strong>Nome:</strong> {$user_name}<br>";
                    $msg_text .= "• <strong>Email:</strong> {$user_email}<br>";
                    $msg_text .= "• <strong>Nuovo Stato:</strong> DISATTIVO";
                } else {
                    $msg_text = "📝 <strong>STATO FORNITORE MODIFICATO</strong><br>";
                    $msg_text .= "• <strong>ID:</strong> {$target_user_id}<br>";
                    $msg_text .= "• <strong>Nome:</strong> {$user_name}<br>";
                    $msg_text .= "• <strong>Email:</strong> {$user_email}<br>";
                    $msg_text .= "• <strong>Nuovo Stato:</strong> {$new_status}";
                }
                break;
                
            case 'request_documents':
                $msg_text = "📋 <strong>RICHIESTI NUOVI DOCUMENTI</strong><br>";
                $msg_text .= "• <strong>ID:</strong> {$target_user_id}<br>";
                $msg_text .= "• <strong>Nome:</strong> {$user_name}<br>";
                $msg_text .= "• <strong>Email:</strong> {$user_email}<br>";
                $msg_text .= "• <strong>Azione:</strong> Contrassegnato come 'Richiesti Documenti'";
                break;
                
            case 'remove_request':
                $msg_text = "🗑️ <strong>RIMOSSA RICHIESTA DOCUMENTI</strong><br>";
                $msg_text .= "• <strong>ID:</strong> {$target_user_id}<br>";
                $msg_text .= "• <strong>Nome:</strong> {$user_name}<br>";
                $msg_text .= "• <strong>Email:</strong> {$user_email}<br>";
                $msg_text .= "• <strong>Azione:</strong> Rimosso flag 'Richiesti Documenti'";
                break;
        }
    }
    
    if ($msg_type === 'error') {
        $msg_text = $msg_icon . ' Errore durante l\'operazione';
    }
    
    echo '<div id="feedback-message" style="margin-bottom: 15px; padding: 15px; background: ' . $msg_color . '; color: ' . $msg_text_color . '; border-radius: 8px; border-left: 5px solid ' . ($msg_type === 'success' ? '#28a745' : '#dc3545') . '; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">';
    echo '<div style="font-size: 14px; line-height: 1.5;">' . $msg_text . '</div>';
    if ($msg_type === 'success') {
        echo '<div id="countdown-text" style="font-size: 11px; color: #6c757d; margin-top: 8px; font-style: italic;">Questo messaggio scomparirà automaticamente tra <span id="countdown-seconds">10</span> secondi...</div>';
    }
    echo '</div>';
}

// ================== RIEPILOGO MODIFICHE DOCUMENTI ==================

// Get all users with document changes for summary
$users_with_changes = getAllUsersWithDocumentChanges();

if (!empty($users_with_changes)) {
    echo '<div style="background: #fff3cd; border: 1px solid #ffc107; border-radius: 8px; margin-bottom: 20px; border-left: 5px solid #ffc107; overflow: hidden;">';
    
    // Accordion Header (clickable)
    echo '<div onclick="toggleDocumentChangesAccordion()" style="background: rgba(255, 193, 7, 0.2); padding: 15px 20px; cursor: pointer; user-select: none; border-bottom: 1px solid #ffc107;" onmouseover="this.style.background=\'rgba(255, 193, 7, 0.3)\'" onmouseout="this.style.background=\'rgba(255, 193, 7, 0.2)\'">';
    echo '<h3 style="color: #856404; margin: 0; display: flex; align-items: center; justify-content: space-between;">';
    echo '<span>🚨 Riepilogo Utenti con Modifiche Documenti <span style="background: #ffc107; color: #000; padding: 2px 8px; border-radius: 12px; font-size: 12px; margin-left: 10px;">' . count($users_with_changes) . ' utenti</span></span>';
    echo '<span id="accordion-arrow" style="font-size: 16px; transition: transform 0.3s ease;">▼</span>';
    echo '</h3>';
    echo '</div>';
    
    // Accordion Content (initially collapsed)
    echo '<div id="document-changes-content" style="display: none; padding: 20px;">';
    echo '<div style="display: grid; gap: 15px;">';
    foreach ($users_with_changes as $user_info) {
        echo '<div style="background: #f8d7da; border: 1px solid #dc3545; border-radius: 6px; padding: 15px; border-left: 4px solid #dc3545;">';
        echo '<div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 8px;">';
        echo '<div>';
        echo '<strong style="color: #721c24; font-size: 14px;">🏢 ' . htmlspecialchars($user_info['rag_soc']) . '</strong>';
        echo '<div style="font-size: 12px; color: #6c757d; margin-top: 2px;">';
        echo '<strong>ID:</strong> ' . $user_info['user_id'] . ' | ';
        echo '<strong>Email:</strong> ' . htmlspecialchars($user_info['email']);
        echo '</div>';
        echo '</div>';
        echo '<span style="background: #dc3545; color: white; padding: 1px 6px; border-radius: 10px; font-size: 10px;">AUTO-DISATTIVATO</span>';
        echo '</div>';
        
        echo '<div style="margin-top: 10px;">';
        echo '<strong style="color: #721c24; font-size: 12px;">📄 Documenti modificati:</strong>';
        echo '<div style="margin-top: 5px; font-size: 11px; line-height: 1.4;">';
        foreach ($user_info['changed_documents'] as $change) {
            echo '<div style="background: rgba(220,53,69,0.1); padding: 4px 8px; margin: 2px 0; border-radius: 3px;">';
            echo '<strong style="color: #721c24;">• ' . $change['document'] . '</strong><br>';
            echo '<span style="color: #6c757d;">&nbsp;&nbsp;da "' . htmlspecialchars($change['old_date']) . '" a "' . htmlspecialchars($change['new_date']) . '"</span>';
            echo '</div>';
        }
        echo '</div>';
        echo '</div>';
        echo '</div>';
    }
    echo '</div>';
    
    echo '<div style="margin-top: 15px; padding: 10px; background: rgba(220,53,69,0.1); border-radius: 4px; font-size: 12px; color: #721c24;">';
    echo '<strong>ℹ️ Nota:</strong> Questi utenti sono stati automaticamente disattivati a causa di modifiche recenti ai documenti non ancora revisionate. ';
    echo 'È stata inviata una notifica email all\'amministratore per ogni modifica rilevata.';
    echo '</div>';
    
    echo '</div>'; // Close accordion content
    echo '</div>'; // Close accordion container
} else {
    echo '<div style="background: #d4edda; border: 1px solid #28a745; border-radius: 8px; padding: 15px; margin-bottom: 20px; border-left: 5px solid #28a745;">';
    echo '<h4 style="color: #155724; margin: 0; display: flex; align-items: center;">✅ Nessuna Modifica Rilevata</h4>';
    echo '<p style="margin: 8px 0 0 0; font-size: 14px; color: #155724;">Tutti i fornitori hanno i documenti sincronizzati. Nessuna disattivazione automatica necessaria.</p>';
    echo '</div>';
}

// TABELLA
echo '<table style="width: 100%; border-collapse: collapse; border: 1px solid #ddd;">';
echo '<tr style="background: #0066a2 !important; color: white !important;">';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">ID</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">Tipo</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">Ragione Sociale</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">Email</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">P.IVA</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">RCT-RCO</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">CCIA</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">White List</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">SOA</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">DURC</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">Altre Scadenze</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">Stato</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">📄 Nota richiesta documenti</th>';
echo '<th style="padding: 10px; border: 1px solid #ddd; background: #0066a2 !important; color: white !important;">Azioni</th>';
echo '</tr>';

$suppliers = get_users([
    'role' => 'subscriber',
    'orderby' => 'ID',
    'order' => 'DESC'
]);

foreach ($suppliers as $user) {
    $user_id = $user->ID;
    $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true);
    $tipo = get_user_meta($user_id, 'user_registration_tip_ut_rad', true);
    
    // Calcola dati dinamici
    $rct_rco_field = ($tipo === 'Forniture') ? 'user_registration_scad_rct_rco_forni' : 'user_registration_scad_rct_rco';
    $rct_rco = get_user_meta($user_id, $rct_rco_field, true);
    $ccia = get_user_meta($user_id, 'user_registration_scad_CCIAA', true);
    $white_list = get_user_meta($user_id, 'user_registration_scad_wit', true);
    $soa = get_user_meta($user_id, 'user_registration_scad_soa', true);
    $durc = get_user_meta($user_id, 'user_registration_scad_durc', true);
    $altre = get_user_meta($user_id, 'user_registration_scadenza_altre_scadenze', true);
    
    // 🚨 NUOVO: Controllo automatico modifiche documenti
    createSuppliersCopyTable(); // Assicura che la tabella copia esista
    $changed_documents = checkDocumentChangesAndDisableUser($user_id);
    $was_disabled = is_array($changed_documents) && !empty($changed_documents);
    
    // Calcola stato dinamico
    $dynamic_status = determineSupplierStatus($user_id);
    
    // Controlla richiesta documenti (nuovo sistema)
    $document_request = getDocumentRequest($user_id);
    $has_document_request = !empty($document_request);
    
    $can_activate = hasDocuments($user_id);
    $status_config = $supplier_statuses[$dynamic_status];
    
    echo '<tr style="border-bottom: 1px solid #ddd;" class="supplier-row" data-status="' . $dynamic_status . '" data-type="' . ($tipo ?: 'N/A') . '" data-richiesta-documenti="' . ($has_document_request ? '1' : '0') . '" data-auto-disattivato="' . ($was_disabled ? '1' : '0') . '">';
    echo '<td style="padding: 8px; border: 1px solid #ddd;">' . $user_id . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd;">' . ($tipo ?: 'N/A') . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd;">' . ($rag_soc ?: 'N/A') . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd;">' . $user->user_email . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd;">' . $user->display_name . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd; font-size: 11px;">' . renderExpiryCell($rct_rco) . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd; font-size: 11px;">' . renderExpiryCell($ccia) . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd; font-size: 11px;">' . renderExpiryCell($white_list) . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd; font-size: 11px;">' . renderExpiryCell($soa) . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd; font-size: 11px;">' . renderExpiryCell($durc) . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd; font-size: 11px;">' . renderExpiryCell($altre) . '</td>';
    echo '<td style="padding: 8px; border: 1px solid #ddd;">';
    
    // Mostra stato con tooltip
    echo '<span class="supplier-status" style="background: ' . $status_config['color'] . '; color: white; padding: 3px 8px; border-radius: 10px; font-size: 11px;" title="' . htmlspecialchars($status_config['tooltip']) . '">' . $status_config['label'] . '</span>';
    
    // 🚨 Indicatore disattivazione automatica
    if ($was_disabled) {
        echo '<br><span style="background: #dc3545; color: white; padding: 2px 6px; border-radius: 8px; font-size: 10px; margin-top: 3px; display: inline-block; animation: pulse 2s infinite;" title="Disattivato automaticamente per modifiche ai documenti">🚨 AUTO-DISATTIVATO</span>';
        
        // Mostra i documenti modificati
        echo '<br><div style="background: #f8d7da; color: #721c24; padding: 6px; border-radius: 4px; font-size: 9px; margin-top: 4px; border-left: 3px solid #dc3545;">';
        echo '<strong>📄 Documenti modificati:</strong><br>';
        foreach ($changed_documents as $change) {
            echo '• <strong>' . $change['document'] . '</strong><br>';
            echo '&nbsp;&nbsp;da "' . htmlspecialchars($change['old_date']) . '"<br>';
            echo '&nbsp;&nbsp;a "' . htmlspecialchars($change['new_date']) . '"<br>';
        }
        echo '</div>';
    }
    
    echo '</td>';
    
    // Nuova colonna: Nota richiesta documenti
    echo '<td style="padding: 8px; border: 1px solid #ddd;">';
    if ($has_document_request) {
        echo '<div style="background: #fff3cd; color: #856404; padding: 8px; border-radius: 4px; border-left: 3px solid #ffc107; font-size: 11px;">';
        echo '<strong>📄 Richiesta attiva</strong><br>';
        echo '<div style="margin-top: 4px; font-size: 10px;">';
        echo '<strong>Nota:</strong> ' . htmlspecialchars(substr($document_request['richiesta_note'], 0, 100)) . (strlen($document_request['richiesta_note']) > 100 ? '...' : '') . '<br>';
        echo '<strong>Data:</strong> ' . date('d/m/Y H:i', strtotime($document_request['data_richiesta']));
        echo '</div>';
        echo '</div>';
    } else {
        echo '<span style="color: #6c757d; font-style: italic; font-size: 11px;">Nessuna richiesta</span>';
    }
    echo '</td>';
    
    // Actions column
    echo '<td style="padding: 8px; border: 1px solid #ddd;">';
    
    // Pulsanti azioni
    if ($dynamic_status === 'Disattivo' || $dynamic_status === 'Disattivo_In_Attesa') {
        if ($can_activate) {
            $current_url = $_SERVER['REQUEST_URI'];
            $base_url = strtok($current_url, '?');
            $activate_url = $base_url . '?action=toggle_user_status&user_id=' . $user_id . '&new_status=Attivo';
            echo '<a href="' . esc_url($activate_url) . '" onclick="return confirm(\'Confermi attivazione?\')" style="background: #28a745; color: white; border: none; padding: 3px 8px; border-radius: 3px; cursor: pointer; font-size: 11px; margin-right: 5px; text-decoration: none; display: inline-block;">ATTIVA</a>';
        } else {
            echo '<span style="background: #ccc; padding: 3px 8px; border-radius: 3px; font-size: 11px; color: #666; margin-right: 5px;" title="Nessun documento caricato">ATTIVA</span>';
        }
    } else {
        $current_url = $_SERVER['REQUEST_URI'];
        $base_url = strtok($current_url, '?');
        $deactivate_url = $base_url . '?action=toggle_user_status&user_id=' . $user_id . '&new_status=Disattivo';
        echo '<a href="' . esc_url($deactivate_url) . '" onclick="return confirm(\'Confermi disattivazione?\')" style="background: #dc3545; color: white; border: none; padding: 3px 8px; border-radius: 3px; cursor: pointer; font-size: 11px; margin-right: 5px; text-decoration: none; display: inline-block;">DISATTIVA</a>';
    }
    
    // Document request buttons (BO HSE style)
    $rag_soc = get_user_meta($user_id, 'user_registration_rag_soc', true) ?: $user->display_name;
    
    if ($has_document_request) {
        // Show cancel button if there's an active request
        echo '<br><button onclick="cancelDocumentRequest(' . $user_id . ', \'' . addslashes($rag_soc) . '\')" style="background: #6c757d; color: white; border: none; padding: 3px 8px; border-radius: 3px; cursor: pointer; font-size: 11px; text-decoration: none; display: inline-block; margin-top: 2px;">🗑️ CANCELLA RICHIESTA DOCUMENTI</button>';
    } else {
        // Show request button if no active request
        echo '<br><button onclick="openDocumentRequestModal(' . $user_id . ', \'' . addslashes($rag_soc) . '\')" style="background: #17a2b8; color: white; border: none; padding: 3px 8px; border-radius: 3px; cursor: pointer; font-size: 11px; text-decoration: none; display: inline-block; margin-top: 2px;">📄 RICHIEDI DOCUMENTI</button>';
    }
    
    echo '</td>';
    echo '</tr>';
}

echo '</table>';

// Document Request Modal
echo '<div id="document-request-modal" style="display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4);">';
echo '<div style="background-color: #fefefe; margin: 5% auto; padding: 0; border: none; border-radius: 8px; width: 90%; max-width: 600px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">';
echo '<div style="background: linear-gradient(135deg, #17a2b8, #138496); color: white; padding: 20px; margin: 0; border-radius: 8px 8px 0 0;">';
echo '<div style="display: flex; justify-content: space-between; align-items: center;">';
echo '<h4 style="margin: 0;">📄 Richiesta Documenti</h4>';
echo '<button onclick="closeDocumentRequestModal()" style="background: transparent; color: white; border: none; font-size: 24px; cursor: pointer; padding: 0; line-height: 1;">×</button>';
echo '</div>';
echo '<p style="margin: 8px 0 0 0; opacity: 0.9;">Azienda: <span id="document-azienda-name"></span></p>';
echo '</div>';
echo '<form id="document-request-form" method="POST" style="padding: 20px;">';
echo '<input type="hidden" name="document_action" value="request_documents">';
echo '<input type="hidden" name="user_id" id="document-user-id" value="">';
echo '<div style="margin-bottom: 20px;">';
echo '<label style="display: block; font-weight: bold; margin-bottom: 8px; color: #333;">📝 Descrizione richiesta documenti:</label>';
echo '<textarea name="richiesta_note" id="document-richiesta-note" rows="4" required style="width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 4px; font-family: inherit; resize: vertical;" placeholder="Inserisci i dettagli della richiesta documenti..."></textarea>';
echo '</div>';
echo '<div style="background: #f8f9fa; padding: 15px; border-radius: 4px; margin-bottom: 20px; border-left: 4px solid #17a2b8;">';
echo '<p style="margin: 0; font-size: 14px; color: #495057;"><strong>ℹ️ Informazioni:</strong></p>';
echo '<ul style="margin: 8px 0 0 0; padding-left: 20px; font-size: 13px; color: #6c757d;">';
echo '<li>Verrà inviata una email automatica all\'azienda</li>';
echo '<li>La richiesta verrà registrata nel sistema</li>';
echo '<li>Puoi cancellare la richiesta in qualsiasi momento</li>';
echo '</ul>';
echo '</div>';
echo '<div style="text-align: right;">';
echo '<button type="button" onclick="closeDocumentRequestModal()" style="background: #6c757d; color: white; border: none; padding: 10px 20px; border-radius: 4px; cursor: pointer; margin-right: 10px;">Annulla</button>';
echo '<button type="button" onclick="submitDocumentRequest()" style="background: #17a2b8; color: white; border: none; padding: 10px 20px; border-radius: 4px; cursor: pointer; font-weight: bold;">📄 Invia Richiesta</button>';
echo '</div>';
echo '</form>';
echo '</div>';
echo '</div>';

echo '</div>';

// ================== JAVASCRIPT BASE ==================
?>
<script>
function exportTableToCSV() {
    var table = document.querySelector("table");
    if (!table) {
        alert("Tabella non trovata!");
        return;
    }
    
    var csv = [];
    var exportedRows = 0;
    
    // Header semplificato (solo 6 colonne come da richiesta)
    var headerRow = ["ID", "Ragione Sociale", "Email", "P.IVA", "Stato", "Data Registrazione"];
    csv.push(headerRow.map(h => '"' + h + '"').join(","));
    
    var dataRows = table.querySelectorAll("tr.supplier-row");
    for (var i = 0; i < dataRows.length; i++) {
        var row = dataRows[i];
        var isVisible = window.getComputedStyle(row).display !== "none";
        
        if (isVisible) {
            var cols = row.querySelectorAll("td");
            
            // Estrai solo le colonne necessarie: ID(0), Ragione Sociale(2), Email(3), P.IVA(4), Stato(11)
            if (cols.length > 11) {
                var id = cols[0].textContent.trim();
                var ragioneSociale = cols[2].textContent.trim().replace(/[\r\n]+/g, " ").replace(/"/g, '""');
                var email = cols[3].textContent.trim().replace(/[\r\n]+/g, " ").replace(/"/g, '""');
                var piva = cols[4].textContent.trim().replace(/[\r\n]+/g, " ").replace(/"/g, '""');
                
                // Per lo stato, prendiamo solo il testo del badge stato, non tutto il contenuto della cella
                var statoCell = cols[11];
                var statusSpan = statoCell.querySelector('.supplier-status');
                var stato = statusSpan ? statusSpan.textContent.trim() : statoCell.textContent.trim().split('\n')[0];
                stato = stato.replace(/[\r\n]+/g, " ").replace(/"/g, '""');
                
                // Data registrazione - non disponibile nella tabella, quindi lasciamo vuoto
                var dataRegistrazione = '';
                
                var csvRow = [
                    '"' + id + '"',
                    '"' + ragioneSociale + '"', 
                    '"' + email + '"',
                    '"' + piva + '"',
                    '"' + stato + '"',
                    '"' + dataRegistrazione + '"'
                ];
                
                csv.push(csvRow.join(","));
                exportedRows++;
            }
        }
    }
    
    var csvContent = "\uFEFF" + csv.join("\n");
    var blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
    
    var link = document.createElement("a");
    if (link.download !== undefined) {
        var url = URL.createObjectURL(blob);
        link.setAttribute("href", url);
        link.setAttribute("download", "fornitori_" + new Date().toISOString().slice(0,19).replace(/:/g, "-") + ".csv");
        link.style.visibility = "hidden";
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        var totalRows = dataRows.length;
        var message = "File CSV scaricato! " + exportedRows + " fornitori esportati (6 colonne: ID, Ragione Sociale, Email, P.IVA, Stato, Data Registrazione)";
        if (exportedRows < totalRows) {
            message += " (Filtri applicati: " + (totalRows - exportedRows) + " righe nascoste)";
        }
        alert(message);
    } else {
        alert("Browser non supporta download automatico");
    }
}

function performSearch() {
    var searchInput = document.getElementById("searchInput");
    var searchTerm = searchInput ? searchInput.value : "";
    
    if (!searchTerm || searchTerm.trim() === "" || searchTerm === "Scrivi per cercare...") {
        updateFilters();
        return;
    }
    
    var rows = document.querySelectorAll(".supplier-row");
    var visibleAfterSearch = 0;
    
    rows.forEach(function(row) {
        var rowText = row.textContent.toLowerCase();
        var matchesSearch = rowText.includes(searchTerm.toLowerCase());
        
        if (matchesSearch && shouldRowBeVisible(row)) {
            row.style.display = "";
            visibleAfterSearch++;
        } else {
            row.style.display = "none";
        }
    });
    
    updateActiveFiltersDisplay(visibleAfterSearch);
}

function shouldRowBeVisible(row) {
    var selectedStatuses = [];
    var statusCheckboxes = document.querySelectorAll("input[id^=status_]:checked");
    statusCheckboxes.forEach(function(checkbox) {
        selectedStatuses.push(checkbox.id.replace("status_", ""));
    });
    
    var selectedTypes = [];
    var typeCheckboxes = document.querySelectorAll("input[id^=type_]:checked");
    typeCheckboxes.forEach(function(checkbox) {
        selectedTypes.push(checkbox.id.replace("type_", ""));
    });
    
    var richiestiDocumentiFilter = document.getElementById("filter_richiesti_documenti");
    var showOnlyRichiestiDocumenti = richiestiDocumentiFilter && richiestiDocumentiFilter.checked;
    
    var autoDisattivatoFilter = document.getElementById("filter_auto_disattivato");
    var showOnlyAutoDisattivato = autoDisattivatoFilter && autoDisattivatoFilter.checked;
    
    if (selectedStatuses.length === 0 && selectedTypes.length === 0 && !showOnlyRichiestiDocumenti && !showOnlyAutoDisattivato) {
        return true;
    }
    
    if (selectedStatuses.length > 0) {
        var rowStatus = row.getAttribute("data-status");
        if (selectedStatuses.indexOf(rowStatus) === -1) {
            return false;
        }
    }
    
    if (selectedTypes.length > 0) {
        var rowType = row.getAttribute("data-type");
        if (selectedTypes.indexOf(rowType) === -1) {
            return false;
        }
    }
    
    if (showOnlyRichiestiDocumenti) {
        var hasRichiestaDocumenti = row.getAttribute("data-richiesta-documenti") === "1";
        if (!hasRichiestaDocumenti) {
            return false;
        }
    }
    
    if (showOnlyAutoDisattivato) {
        var hasAutoDisattivato = row.getAttribute("data-auto-disattivato") === "1";
        if (!hasAutoDisattivato) {
            return false;
        }
    }
    
    return true;
}

function updateFilters() {
    var rows = document.querySelectorAll(".supplier-row");
    var visibleCount = 0;
    
    rows.forEach(function(row) {
        if (shouldRowBeVisible(row)) {
            row.style.display = "";
            visibleCount++;
        } else {
            row.style.display = "none";
        }
    });
    
    var searchInput = document.getElementById("searchInput");
    var searchTerm = searchInput ? searchInput.value : "";
    
    if (searchTerm && searchTerm.trim() !== "" && searchTerm !== "Scrivi per cercare...") {
        performSearch();
    } else {
        updateActiveFiltersDisplay(visibleCount);
    }
}

function clearAllFilters() {
    var allCheckboxes = document.querySelectorAll("input[type=checkbox]");
    allCheckboxes.forEach(function(checkbox) {
        checkbox.checked = false;
    });
    
    var searchInput = document.getElementById("searchInput");
    if (searchInput) {
        searchInput.value = "";
    }
    
    var rows = document.querySelectorAll(".supplier-row");
    rows.forEach(function(row) {
        row.style.display = "";
    });
    
    var activeFiltersDiv = document.getElementById("active-filters");
    if (activeFiltersDiv) {
        activeFiltersDiv.style.display = "none";
    }
}

function updateActiveFiltersDisplay(visibleCount) {
    var selectedStatuses = [];
    var statusCheckboxes = document.querySelectorAll("input[id^=status_]:checked");
    statusCheckboxes.forEach(function(checkbox) {
        selectedStatuses.push(checkbox.id.replace("status_", ""));
    });
    
    var selectedTypes = [];
    var typeCheckboxes = document.querySelectorAll("input[id^=type_]:checked");
    typeCheckboxes.forEach(function(checkbox) {
        selectedTypes.push(checkbox.id.replace("type_", ""));
    });
    
    var richiestiDocumentiFilter = document.getElementById("filter_richiesti_documenti");
    var showOnlyRichiestiDocumenti = richiestiDocumentiFilter && richiestiDocumentiFilter.checked;
    
    var autoDisattivatoFilter = document.getElementById("filter_auto_disattivato");
    var showOnlyAutoDisattivato = autoDisattivatoFilter && autoDisattivatoFilter.checked;
    
    var activeFiltersDiv = document.getElementById("active-filters");
    var filterList = document.getElementById("filter-list");
    var filters = [];
    
    if (selectedStatuses.length > 0) {
        filters.push("Stati: " + selectedStatuses.join(", "));
    }
    
    if (selectedTypes.length > 0) {
        filters.push("Tipi: " + selectedTypes.join(", "));
    }
    
    if (showOnlyRichiestiDocumenti) {
        filters.push("Richiesti Documenti: Si");
    }
    
    if (showOnlyAutoDisattivato) {
        filters.push("Auto-Disattivato: Si");
    }
    
    var searchInput = document.getElementById("searchInput");
    var searchTerm = searchInput ? searchInput.value : "";
    
    if (searchTerm && searchTerm.trim() !== "" && searchTerm !== "Scrivi per cercare...") {
        filters.push('Ricerca: "' + searchTerm + '"');
    }
    
    if (filters.length > 0) {
        activeFiltersDiv.style.display = "block";
        filterList.textContent = filters.join(" | ") + " (" + visibleCount + " risultati)";
    } else {
        activeFiltersDiv.style.display = "none";
    }
}

// Auto-hide messaggi feedback con countdown
function hideFeedbackMessage() {
    var feedbackMessage = document.getElementById('feedback-message');
    var countdownElement = document.getElementById('countdown-seconds');
    
    if (feedbackMessage) {
        var secondsLeft = 10;
        
        // Aggiorna il countdown ogni secondo
        var countdownInterval = setInterval(function() {
            secondsLeft--;
            if (countdownElement) {
                countdownElement.textContent = secondsLeft;
            }
            
            if (secondsLeft <= 0) {
                clearInterval(countdownInterval);
                
                // Fade out
                feedbackMessage.style.transition = 'opacity 0.5s ease';
                feedbackMessage.style.opacity = '0';
                
                setTimeout(function() {
                    feedbackMessage.style.display = 'none';
                    
                    // Pulisci URL dai parametri del messaggio
                    var currentUrl = new URL(window.location);
                    var urlChanged = false;
                    
                    var paramsToRemove = ['msg', 'action_type', 'target_user_id', 'user_email', 'user_name', 'new_status'];
                    paramsToRemove.forEach(function(param) {
                        if (currentUrl.searchParams.has(param)) {
                            currentUrl.searchParams.delete(param);
                            urlChanged = true;
                        }
                    });
                    
                    if (urlChanged) {
                        window.history.replaceState({}, document.title, currentUrl.toString());
                    }
                }, 500);
            }
        }, 1000);
    }
}

// Inizializzazione
document.addEventListener("DOMContentLoaded", function() {
    var rows = document.querySelectorAll(".supplier-row");
    rows.forEach(function(row) {
        row.style.display = "";
    });
    
    var activeFiltersDiv = document.getElementById("active-filters");
    if (activeFiltersDiv) {
        activeFiltersDiv.style.display = "none";
    }
    
    var searchInput = document.getElementById("searchInput");
    if (searchInput) {
        searchInput.value = "";
    }
    
    hideFeedbackMessage();
});

// ================== DOCUMENT REQUEST FUNCTIONS ==================

function openDocumentRequestModal(userId, aziendaName) {
    const modal = document.getElementById('document-request-modal');
    const userIdInput = document.getElementById('document-user-id');
    const aziendaNameSpan = document.getElementById('document-azienda-name');
    const notesTextarea = document.getElementById('document-richiesta-note');
    
    userIdInput.value = userId;
    aziendaNameSpan.textContent = aziendaName;
    notesTextarea.value = '';
    notesTextarea.focus();
    
    modal.style.display = 'block';
}

function closeDocumentRequestModal() {
    const modal = document.getElementById('document-request-modal');
    modal.style.display = 'none';
}

function submitDocumentRequest() {
    const form = document.getElementById('document-request-form');
    const notes = document.getElementById('document-richiesta-note').value.trim();
    
    if (!notes) {
        alert('⚠️ Inserisci una nota per la richiesta documenti');
        document.getElementById('document-richiesta-note').focus();
        return;
    }
    
    if (notes.length < 10) {
        alert('⚠️ La richiesta deve contenere almeno 10 caratteri');
        document.getElementById('document-richiesta-note').focus();
        return;
    }
    
    if (confirm('Confermi l\'invio della richiesta documenti all\'azienda?')) {
        form.submit();
    }
}

function cancelDocumentRequest(userId, aziendaName) {
    if (confirm(`Confermi la cancellazione della richiesta documenti per ${aziendaName}?\n\nQuesta azione rimuoverà definitivamente la nota richiesta.`)) {
        // Create temporary form for submission
        const form = document.createElement('form');
        form.method = 'POST';
        form.style.display = 'none';
        
        const actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'document_action';
        actionInput.value = 'cancel_request';
        
        const userIdInput = document.createElement('input');
        userIdInput.type = 'hidden';
        userIdInput.name = 'user_id';
        userIdInput.value = userId;
        
        form.appendChild(actionInput);
        form.appendChild(userIdInput);
        document.body.appendChild(form);
        form.submit();
    }
}

// Close modal when clicking outside
window.onclick = function(event) {
    const modal = document.getElementById('document-request-modal');
    if (event.target === modal) {
        closeDocumentRequestModal();
    }
}

// Accordion functionality for document changes summary
function toggleDocumentChangesAccordion() {
    const content = document.getElementById('document-changes-content');
    const arrow = document.getElementById('accordion-arrow');
    
    if (content.style.display === 'none' || content.style.display === '') {
        content.style.display = 'block';
        arrow.style.transform = 'rotate(180deg)';
    } else {
        content.style.display = 'none';
        arrow.style.transform = 'rotate(0deg)';
    }
}
</script>

<style>
@keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.5; }
    100% { opacity: 1; }
}
</style>

<?php
?>